/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (4.2.3).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.farfetch.nuxeo.service.dam.webhook.api;

import com.farfetch.nuxeo.service.dam.webhook.model.RequestBody;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import javax.validation.Valid;


@Validated
@Api(value = "webhook", description = "the webhook API")
public interface WebhookApi {

    default WebhookApiDelegate getDelegate() {
        return new WebhookApiDelegate() {};
    }

    /**
     * POST /webhook : Send a webhook to be processed by the Farfetch platform.
     * Each request is transformed in a event or command to the Farfetch platform. _**The processing of events or commands is asynchronous**_ 
     *
     * @param requestBody  (required)
     * @return Accepted - The event or command was successfully queued for processing. (status code 202)
     *         or Bad Request - The request body is malformed. Please read the schemas part of this document. (status code 400)
     *         or Unauthorized - The credentials used on the request are invalid. (status code 401)
     *         or Internal Server Error - The application that receives the events or commands has an issue. (status code 500)
     *         or Bad Gateway - The location where the events or commands are stored was unreachable. (status code 502)
     */
    @ApiOperation(value = "Send ActivityLog webhook to be processed by the Farfetch platform.", nickname = "webhookPost", notes = "Each request is transformed in a event or command to the Farfetch platform. _**The processing of events or commands is asynchronous**_ ", tags={ "Webhook Operations", })
    @ApiResponses(value = { 
        @ApiResponse(code = 202, message = "Accepted - The event or command was successfully queued for processing."),
        @ApiResponse(code = 400, message = "Bad Request - The request body is malformed. Please read the schemas part of this document."),
        @ApiResponse(code = 401, message = "Unauthorized - The credentials used on the request are invalid."),
        @ApiResponse(code = 500, message = "Internal Server Error - The application that receives the events or commands has an issue."),
        @ApiResponse(code = 502, message = "Bad Gateway - The location where the events or commands are stored was unreachable.") })
    @RequestMapping(value = "/webhook",
        consumes = { "application/json" },
        method = RequestMethod.POST)
    default ResponseEntity<Void> webhookPost(@ApiParam(value = "" ,required=true )  @Valid @org.springframework.web.bind.annotation.RequestBody RequestBody requestBody) {
        return getDelegate().webhookPost(requestBody);
    }

}
